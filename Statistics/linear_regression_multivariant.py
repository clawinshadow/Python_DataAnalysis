import numpy as np
import scipy.stats as st
from sklearn import linear_model

'''
多元线性回归，理论基础与一元的一样，但是这里的代码主要用矩阵理论来实现，
偏导数的不太好写，再就是对各系数做显著性检验，检查多元共线性等问题
'''

def linear_regression(x, y):
    '''
    估计多元线性回归的方程，并进行各种统计分析
    '''
    reg = linear_model.LinearRegression()
    x = np.array(x)
    print(x.shape)
    m, n = x.shape
    if m < n and n == len(y):
        x = np.transpose(x)
    
    reg.fit(x, y)
    print('coefficients: ', reg.coef_)
    print('intercept: ', reg.intercept_)

x1 = [67.3,111.3,173,80.8,199.7,16.2,107.4,185.4,96.1,72.8,64.2,132.2,58.6,\
     174.6,263.5,79.3,14.8,73.5,24.7,139.4,368.2,95.7,109.6,196.2,102.2]
x2 = [6.8,19.8,7.7,7.2,16.5,2.2,10.7,27.1,1.7,9.1,2.1,11.2,6,12.7,15.6,8.9,\
      0.6,5.9,5.0,7.2,16.8,3.8,10.3,15.8,12.0]
x3 = [5,16,17,10,19,1,17,18,10,14,11,23,14,26,34,15,2,11,4,28,32,10,14,16,10]
x4 = [51.9,90.9,73.7,14.5,63.2,2.2,20.2,43.8,55.9,64.3,42.7,76.7,22.8,\
      117.1,146.7,29.9,42.1,25.3,13.4,64.3,163.9,44.5,67.9,39.7,97.1]
y = [0.9,1.1,4.8,3.2,7.8,2.7,1.6,12.5,1.0,2.6,0.3,4.0,0.8,3.5,10.2,3.0,0.2,\
     0.4,1.0,6.8,11.6,1.6,1.2,7.2,3.2]
linear_regression([x1,x2,x3,x4], y)
